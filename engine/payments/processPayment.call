<?php
	include_once("../../engine/Constants.php");
	include_once("../../engine/Core.php");
	global $podunkton;
	
	
	
	/////////////////////////////////////////////////
	/////////////Begin Script below./////////////////
	/////////////////////////////////////////////////
	
	// read the post from PayPal system and add 'cmd'
	$req = 'cmd=_notify-validate';
	foreach ($_POST as $key => $value) {
		$value = urlencode(stripslashes($value));
		$req .= "&$key=$value";
	}
	
	// post back to PayPal system to validate
	$header = "POST /cgi-bin/webscr HTTP/1.0\r\n";
	$header .= "Content-Type: application/x-www-form-urlencoded\r\n";
	$header .= "Content-Length: " . strlen($req) . "\r\n\r\n";
	
	$fp = fsockopen ('ssl://www.paypal.com', 443, $errno, $errstr, 30);
	//$fp = fsockopen ('ssl://www.sandbox.paypal.com', 443, $errno, $errstr, 30);
	
	
	// assign posted variables to local variables
	$item_name = $_POST['item_name'];
	$business = $_POST['business'];
	$item_number = $_POST['item_number'];
	$payment_status = $_POST['payment_status'];
	$mc_gross = $_POST['mc_gross'];
	$payment_currency = $_POST['mc_currency'];
	$txn_id = $_POST['txn_id'];
	$receiver_email = $_POST['receiver_email'];
	$receiver_id = $_POST['receiver_id'];
	$quantity = $_POST['quantity'];
	$num_cart_items = $_POST['num_cart_items'];
	$payment_date = $_POST['payment_date'];
	$first_name = $_POST['first_name'];
	$last_name = $_POST['last_name'];
	$payment_type = $_POST['payment_type'];
	$payment_status = $_POST['payment_status'];
	$payment_gross = $_POST['payment_gross'];
	$payment_fee = $_POST['payment_fee'];
	$settle_amount = $_POST['settle_amount'];
	$memo = $_POST['memo'];
	$payer_email = $_POST['payer_email'];
	$txn_type = $_POST['txn_type'];
	$payer_status = $_POST['payer_status'];
	$address_street = $_POST['address_street'];
	$address_city = $_POST['address_city'];
	$address_state = $_POST['address_state'];
	$address_zip = $_POST['address_zip'];
	$address_country = $_POST['address_country'];
	$address_status = $_POST['address_status'];
	$item_number = $_POST['item_number'];
	$tax = $_POST['tax'];
	$option_name1 = $_POST['option_name1'];
	$option_selection1 = $_POST['option_selection1'];
	$option_name2 = $_POST['option_name2'];
	$option_selection2 = $_POST['option_selection2'];
	$for_auction = $_POST['for_auction'];
	$invoice = $_POST['invoice'];
	$custom = $_POST['custom'];
	$notify_version = $_POST['notify_version'];
	$verify_sign = $_POST['verify_sign'];
	$payer_business_name = $_POST['payer_business_name'];
	$payer_id =$_POST['payer_id'];
	$mc_currency = $_POST['mc_currency'];
	$mc_fee = $_POST['mc_fee'];
	$exchange_rate = $_POST['exchange_rate'];
	$settle_currency  = $_POST['settle_currency'];
	$parent_txn_id  = $_POST['parent_txn_id'];
	$pending_reason = $_POST['pending_reason'];
	$reason_code = $_POST['reason_code'];
	
	
	// subscription specific vars
	
	$subscr_id = $_POST['subscr_id'];
	$subscr_date = $_POST['subscr_date'];
	$subscr_effective  = $_POST['subscr_effective'];
	$period1 = $_POST['period1'];
	$period2 = $_POST['period2'];
	$period3 = $_POST['period3'];
	$amount1 = $_POST['amount1'];
	$amount2 = $_POST['amount2'];
	$amount3 = $_POST['amount3'];
	$mc_amount1 = $_POST['mc_amount1'];
	$mc_amount2 = $_POST['mc_amount2'];
	$mc_amount3 = $_POST['mcamount3'];
	$recurring = $_POST['recurring'];
	$reattempt = $_POST['reattempt'];
	$retry_at = $_POST['retry_at'];
	$recur_times = $_POST['recur_times'];
	$username = $_POST['username'];
	$password = $_POST['password'];
	
	//auction specific vars
	
	$for_auction = $_POST['for_auction'];
	$auction_closing_date  = $_POST['auction_closing_date'];
	$auction_multi_item  = $_POST['auction_multi_item'];
	$auction_buyer_id  = $_POST['auction_buyer_id'];
	
	// Custom variables
	$buyer_userID = $option_name1;
	
	//DB connect creds and email 
	$notify_email =  "vallosdck@gmail.com";
	
	// Check names and prevent price hacks
	switch($item_name){
		case CREDITS_50_NAME:
			if($mc_gross != CREDITS_50_PRICE){
				die();
			}
			break;
		case CREDITS_100_NAME:
			if($mc_gross != CREDITS_100_PRICE){
				die();
			}
			break;
		case CREDITS_200_NAME:
			if($mc_gross != CREDITS_200_PRICE){
				die();
			}
			break;
		case MONTHLY_NAME:
			if($mc_gross != MONTHLY_PRICE){
				die();
			}
			break;
		default:
			die();
			break;
	}
	
	// Check userID
	$query = sprintf("SELECT userID FROM Users WHERE userID = %d", $buyer_userID);
	$result = mysql_query($query, $database->connection);
	
	// Is this buyer a member of our site?
	if(mysql_num_rows($result) == 0){
		die();
	}
	
	if (!$fp) {
		// HTTP ERROR
	} else {
		fputs ($fp, $header . $req);
		while (!feof($fp)) {
			$res = fgets ($fp, 1024);
			
			if (strcmp ($res, "VERIFIED") == 0) {
				
				$fecha = date("m")."/".date("d")."/".date("Y");
				$fecha = date("Y").date("m").date("d");
				
				//check if transaction ID has been processed before
				$checkquery = "select txnid from paypal_payment_info where txnid='".$txn_id."'";
				$sihay = mysql_query($checkquery) or die("Duplicate txn id check query failed:<br>" . mysql_error() . "<br>" . mysql_errno());
				$nm = mysql_num_rows($sihay);
				if ($nm == 0){
	
					//execute query
				    if ($txn_type == "cart"){
				    	
				    	if($payment_status == "Completed" or $payment_status == "Pending" or $payment_status == "Processed" or $payment_status == "Reversed"){ 
				    	
					    	$strQuery = "insert into paypal_payment_info(paymentstatus,buyer_email,firstname,lastname,street,city,state,zipcode,country,mc_gross,mc_fee,memo,paymenttype,paymentdate,txnid,pendingreason,reasoncode,tax,datecreation) values ('".$payment_status."','".$payer_email."','".$first_name."','".$last_name."','".$address_street."','".$address_city."','".$address_state."','".$address_zip."','".$address_country."','".$mc_gross."','".$mc_fee."','".$memo."','".$payment_type."','".$payment_date."','".$txn_id."','".$pending_reason."','".$reason_code."','".$tax."','".$fecha."')";
						
							$result = mysql_query($strQuery) or die("Cart - paypal_payment_info, Query failed:<br>" . mysql_error() . "<br>" . mysql_errno());
							 for ($i = 1; $i <= $num_cart_items; $i++) {
							     $itemname = "item_name".$i;
								 $itemnumber = "item_number".$i;
								 $on0 = "option_name1_".$i;
								 $os0 = "option_selection1_".$i;
								 $on1 = "option_name2_".$i;
								 $os1 = "option_selection2_".$i;
								 $quantity = "quantity".$i;
								
								 $struery = "insert into paypal_cart_info(txnid,itemnumber,itemname,os0,on0,os1,on1,quantity,invoice,custom) values ('".$txn_id."','".$_POST[$itemnumber]."','".$_POST[$itemname]."','".$_POST[$on0]."','".$_POST[$os0]."','".$_POST[$on1]."','".$_POST[$os1]."','".$_POST[$quantity]."','".$invoice."','".$custom."')";
								 $result = mysql_query($struery) or die("Cart - paypal_cart_info, Query failed:<br>" . mysql_error() . "<br>" . mysql_errno());
								
							 }
							 
							 if($payment_status == "Completed"){
							 	// Give credits or Monthly Item
							 	$query = "";
							 	switch($item_name){
									case CREDITS_50_NAME:
										$query = sprintf("UPDATE Users SET credits = credits + 50 WHERE userID = %d", $buyer_userID);
										$result = mysql_query($query, $database->connection);
										if(!$result){
											mail($notify_email, "DATABASE ERROR", "Insert ".CREDITS_50_NAME." for user ".$buyer_userID."\n\n$res\n $req\n $strQuery\n $struery\n  $strQuery2");
											$sysmsg->send($buyer_userID, "System: Credits Purchase Error", "While purchasing ".CREDITS_50_NAME.", we found an error in the system. The system error will be fixed and you will be notified.");
										} else {
											$sysmsg->send($buyer_userID, "System: Credit Purchase", "You purchased <b>".CREDITS_50_NAME."</b> for <b>$".CREDITS_50_PRICE."</b>.");
											mail($notify_email, "CREDIT PURCHASE", "UserID=".$buyer_userID." bought ".CREDITS_50_NAME."!\n\n$res\n $req\n $strQuery\n $struery\n  $strQuery2");
										}
										break;
									case CREDITS_100_NAME:
										$query = sprintf("UPDATE Users SET credits = credits + 100 WHERE userID = %d", $buyer_userID);
										$result = mysql_query($query, $database->connection);
										if(!$result){
											mail($notify_email, "DATABASE ERROR", "Insert ".CREDITS_100_NAME." for user ".$buyer_userID."\n\n$res\n $req\n $strQuery\n $struery\n  $strQuery2");
											$sysmsg->send($buyer_userID, "System: Credits Purchase Error", "While purchasing ".CREDITS_100_NAME.", we found an error in the system. The system error will be fixed and you will be notified.");
										} else {
											$sysmsg->send($buyer_userID, "System: Credit Purchase", "You purchased <b>".CREDITS_100_NAME."</b> for <b>$".CREDITS_100_PRICE."</b>.");
											mail($notify_email, "CREDIT PURCHASE", "UserID=".$buyer_userID." bought ".CREDITS_100_NAME."!\n\n$res\n $req\n $strQuery\n $struery\n  $strQuery2");
										}
										break;
									case CREDITS_200_NAME:
										$query = sprintf("UPDATE Users SET credits = credits + 200 WHERE userID = %d", $buyer_userID);
										$result = mysql_query($query, $database->connection);
										if(!$result){
											mail($notify_email, "DATABASE ERROR", "Insert ".CREDITS_200_NAME." for user ".$buyer_userID."\n\n$res\n $req\n $strQuery\n $struery\n  $strQuery2");
											$sysmsg->send($buyer_userID, "System: Credits Purchase Error", "While purchasing ".CREDITS_200_NAME.", we found an error in the system. The system error will be fixed and you will be notified.");
										} else {
											$sysmsg->send($buyer_userID, "System: Credit Purchase", "You purchased <b>".CREDITS_200_NAME."</b> for <b>$".CREDITS_200_PRICE."</b>.");
											mail($notify_email, "CREDIT PURCHASE", "UserID=".$buyer_userID." bought ".CREDITS_200_NAME."!\n\n$res\n $req\n $strQuery\n $struery\n  $strQuery2");
										}
										break;
									case MONTHLY_NAME:
										$podunkton->addBadge(11);
										
										$query = sprintf("SELECT i.name, i.itemID, iswf.itemswfID, s.slotID FROM Items as i JOIN Items_has_Slots as ihs ON ihs.itemID = i.itemID JOIN Slots as s ON ihs.slotID = s.slotID JOIN Items_has_ItemSWF as ihi ON ihs.id = ihi.ihsID JOIN ItemSWF as iswf ON ihi.itemswfID = iswf.itemswfID WHERE i.monthly = 1");
										$result = mysql_query($query, $database->connection);
										if(!$result){
											mail($notify_email, "SELECT ERROR", "Insert ".MONTHLY_NAME." for user ".$buyer_userID."\n\n$res\n $req\n $strQuery\n $struery\n  $strQuery2");
											$sysmsg->send($buyer_userID, "System: Monthly Item Purchase Error1", "While purchasing ".MONTHLY_NAME.", we found an error in the system. The system error will be fixed and you will be notified.");
										} else {
											$sysmsg->send($buyer_userID, "System: Monthly Item Purchase", "You purchased <b>".MONTHLY_NAME."</b>, this months item, for <b>$".MONTHLY_PRICE."</b>.");
											mail($notify_email, "MONTHLY PURCHASE", "UserID=".$buyer_userID." bought ".MONTHLY_NAME."!\n\n$res\n $req\n $strQuery\n $struery\n  $strQuery2");
										}
										while($rowMonthly = mysql_fetch_object($result)){
											$name = $rowMonthly->name;
											$itemID = $rowMonthly->itemID;
											$swfID = $rowMonthly->itemswfID;
											$slotID = $rowMonthly->slotID;
											$query = sprintf("INSERT INTO Users_has_Items(userID_FK, itemID_FK, equipped, slotID, swfID, maxLevel, equipDate, equipDuration) VALUES(%d, %d, %d, %d, %d, %d, '%s', %d)", $buyer_userID, $itemID, 0, $slotID, $swfID, 1, date("Y-m-d"), 0);
											$resultCheck = mysql_query($query, $database->connection);
											if(!$result){
												mail($notify_email, "DATABASE ERROR", "Insert ".MONTHLY_NAME." for user ".$buyer_userID."\n\n$res\n $req\n $strQuery\n $struery\n  $strQuery2");
												$sysmsg->send($buyer_userID, "System: Monthly Item Purchase Error2", "While purchasing ".MONTHLY_NAME.", we found an error in the system. The system error will be fixed and you will be notified.");
											}
										}
										break;
									default:
										die();
										break;
								}
								
							 } else {
							 	// Status isn't completed'
							 	switch($item_name){
									case CREDITS_50_NAME:
										$sysmsg->send($buyer_userID, "System: Credit Purchase Status", "Your purchase of <b>".CREDITS_50_NAME."</b> at the price of <b>$".CREDITS_50_PRICE."</b>, has not gone through yet. Paypal has notified that us the current status of the payment is in ".$payment_status.". After your payment clears, you will recieve your credits.");
										mail($notify_email, "PAYMENT STATUS", "UserID=".$buyer_userID." is trying to buy ".CREDITS_50_NAME.". The current status is ".$payment_status.".\n\n$res\n $req\n $strQuery\n $struery\n  $strQuery2");
										break;
									case CREDITS_100_NAME:
										$sysmsg->send($buyer_userID, "System: Credit Purchase Status", "Your purchase of <b>".CREDITS_100_NAME."</b> at the price of <b>$".MCREDITS_100_PRICE."</b>, has not gone through yet. Paypal has notified us that the current status of the payment is in ".$payment_status.". After your payment clears, you will recieve your credits.");
										mail($notify_email, "PAYMENT STATUS", "UserID=".$buyer_userID." is trying to buy ".CREDITS_100_NAME.". The current status is ".$payment_status.".\n\n$res\n $req\n $strQuery\n $struery\n  $strQuery2");
										break;
									case CREDITS_200_NAME:
										$sysmsg->send($buyer_userID, "System: Credit Purchase Status", "Your purchase of <b>".CREDITS_200_NAME."</b> at the price of <b>$".CREDITS_200_PRICE."</b>, has not gone through yet. Paypal has notified us that the current status of the payment is in ".$payment_status.". After your payment clears, you will recieve your credits.");
										mail($notify_email, "PAYMENT STATUS", "UserID=".$buyer_userID." is trying to buy ".CREDITS_200_NAME.". The current status is ".$payment_status.".\n\n$res\n $req\n $strQuery\n $struery\n  $strQuery2");
										break;
									case MONTHLY_NAME:
										$sysmsg->send($buyer_userID, "System: Monthly Item Purchase Status", "Your purchase of <b>".MONTHLY_NAME."</b> at the price of <b>$".MONTHLY_PRICE."</b>, has not gone through yet. Paypal has notified us that the current status of the payment is in ".$payment_status.". After your payment clears, you will recieve your credits.");
										mail($notify_email, "PAYMENT STATUS", "UserID=".$buyer_userID." is trying to buy ".MONTHLY_NAME.". The current status is ".$payment_status.".\n\n$res\n $req\n $strQuery\n $struery\n  $strQuery2");
										break;
									default:
										mail($notify_email, "PAYMENT STATUS ERROR", "UserID=".$buyer_userID." is trying to buy ".MONTHLY_NAME.". The current status is ".$payment_status.". Something has gone seriously wrong\n\n$res\n $req\n $strQuery\n $struery\n  $strQuery2");
										die();
										break;
								}
							 	
							 }
						
				    	} else {
				    		mail($notify_email, "PAYMENT STATUS $payment_status", "UserID=".$buyer_userID.". The current status is ".$payment_status.".\n\n$res\n $req\n $strQuery\n $struery\n  $strQuery2");
				    	}
						
	    			} else {
	    				if($payment_status == "Completed" or $payment_status == "Pending" or $payment_status == "Processed" or $payment_status == "Reversed"){
							$strQuery = "insert into paypal_payment_info(paymentstatus,buyer_email,firstname,lastname,street,city,state,zipcode,country,mc_gross,mc_fee,itemnumber,itemname,os0,on0,os1,on1,quantity,memo,paymenttype,paymentdate,txnid,pendingreason,reasoncode,tax,datecreation) values ('".$payment_status."','".$payer_email."','".$first_name."','".$last_name."','".$address_street."','".$address_city."','".$address_state."','".$address_zip."','".$address_country."','".$mc_gross."','".$mc_fee."','".$item_number."','".$item_name."','".$option_name1."','".$option_selection1."','".$option_name2."','".$option_selection2."','".$quantity."','".$memo."','".$payment_type."','".$payment_date."','".$txn_id."','".$pending_reason."','".$reason_code."','".$tax."','".$fecha."')";
							$result = mysql_query("insert into paypal_payment_info(paymentstatus,buyer_email,firstname,lastname,street,city,state,zipcode,country,mc_gross,mc_fee,itemnumber,itemname,os0,on0,os1,on1,quantity,memo,paymenttype,paymentdate,txnid,pendingreason,reasoncode,tax,datecreation) values ('".$payment_status."','".$payer_email."','".$first_name."','".$last_name."','".$address_street."','".$address_city."','".$address_state."','".$address_zip."','".$address_country."','".$mc_gross."','".$mc_fee."','".$item_number."','".$item_name."','".$option_name1."','".$option_selection1."','".$option_name2."','".$option_selection2."','".$quantity."','".$memo."','".$payment_type."','".$payment_date."','".$txn_id."','".$pending_reason."','".$reason_code."','".$tax."','".$fecha."')") or die("Default - paypal_payment_info, Query failed:<br>" . mysql_error() . "<br>" . mysql_errno());
	    				}
	    				
	    				if($payment_status == "Completed"){
						 	// Give credits or Monthly Item
						 	$query = "";
						 	switch($item_name){
								case CREDITS_50_NAME:
									$query = sprintf("UPDATE Users SET credits = credits + 50 WHERE userID = %d", $buyer_userID);
									$result = mysql_query($query, $database->connection);
									if(!$result){
										mail($notify_email, "DATABASE ERROR", "Insert ".CREDITS_50_NAME." for user ".$buyer_userID."\n\n$res\n $req\n $strQuery\n $struery\n  $strQuery2");
										$sysmsg->send($buyer_userID, "System: Credit Purchase", "You purchased <b>".CREDITS_50_NAME."</b> for <b>$".CREDITS_50_PRICE."</b>.");
									} else {
										$sysmsg->send($buyer_userID, "System: Credit Purchase", "You purchased <b>".CREDITS_50_NAME."</b> for <b>$".CREDITS_50_PRICE."</b>.");
										mail($notify_email, "CREDIT PURCHASE", "UserID=".$buyer_userID." bought ".CREDITS_50_NAME."!\n\n$res\n $req\n $strQuery\n $struery\n  $strQuery2");
									}
									break;
								case CREDITS_100_NAME:
									$query = sprintf("UPDATE Users SET credits = credits + 100 WHERE userID = %d", $buyer_userID);
									$result = mysql_query($query, $database->connection);
									if(!$result){
										mail($notify_email, "DATABASE ERROR", "Insert ".CREDITS_100_NAME." for user ".$buyer_userID."\n\n$res\n $req\n $strQuery\n $struery\n  $strQuery2");
										$sysmsg->send($buyer_userID, "System: Credit Purchase", "You purchased <b>".CREDITS_100_NAME."</b> for <b>$".CREDITS_100_PRICE."</b>.");
									} else {
										$sysmsg->send($buyer_userID, "System: Credit Purchase", "You purchased <b>".CREDITS_100_NAME."</b> for <b>$".CREDITS_100_PRICE."</b>.");
										mail($notify_email, "CREDIT PURCHASE", "UserID=".$buyer_userID." bought ".CREDITS_100_NAME."!\n\n$res\n $req\n $strQuery\n $struery\n  $strQuery2");
									}
									break;
								case CREDITS_200_NAME:
									$query = sprintf("UPDATE Users SET credits = credits + 200 WHERE userID = %d", $buyer_userID);
									$result = mysql_query($query, $database->connection);
									if(!$result){
										mail($notify_email, "DATABASE ERROR", "Insert ".CREDITS_200_NAME." for user ".$buyer_userID."\n\n$res\n $req\n $strQuery\n $struery\n  $strQuery2");
										$sysmsg->send($buyer_userID, "System: Credit Purchase", "You purchased <b>".CREDITS_200_NAME."</b> for <b>$".CREDITS_200_PRICE."</b>.");
									} else {
										$sysmsg->send($buyer_userID, "System: Credit Purchase", "You purchased <b>".CREDITS_200_NAME."</b> for <b>$".CREDITS_200_PRICE."</b>.");
										mail($notify_email, "CREDIT PURCHASE", "UserID=".$buyer_userID." bought ".CREDITS_200_NAME."!\n\n$res\n $req\n $strQuery\n $struery\n  $strQuery2");
									}
									break;
								case MONTHLY_NAME:
									$podunkton->addBadge(17);
									
									$query = sprintf("SELECT i.name, i.itemID, iswf.itemswfID, s.slotID FROM Items as i JOIN Items_has_Slots as ihs ON ihs.itemID = i.itemID JOIN Slots as s ON ihs.slotID = s.slotID JOIN Items_has_ItemSWF as ihi ON ihs.id = ihi.ihsID JOIN ItemSWF as iswf ON ihi.itemswfID = iswf.itemswfID WHERE i.monthly = 1");
									$result = mysql_query($query, $database->connection);
									if(!$result){
										mail($notify_email, "SELECT ERROR", "Insert ".MONTHLY_NAME." for user ".$buyer_userID."\n\n$res\n $req\n $strQuery\n $struery\n  $strQuery2");
										$sysmsg->send($buyer_userID, "System: Monthly Item Purchase Error3", "While purchasing ".MONTHLY_NAME.", we found an error in the system. The system error will be fixed and you will be notified.");
									} else {
										$sysmsg->send($buyer_userID, "System: Monthly Item Purchase", "You purchased <b>".MONTHLY_NAME."</b>, this months item, for <b>$".MONTHLY_PRICE."</b>.");
										mail($notify_email, "MONTHLY PURCHASE", "UserID=".$buyer_userID." bought ".MONTHLY_NAME."!\n\n$res\n $req\n $strQuery\n $struery\n  $strQuery2");
									}
									while($rowMonthly = mysql_fetch_object($result)){
										$name = $rowMonthly->name;
										$itemID = $rowMonthly->itemID;
										$swfID = $rowMonthly->itemswfID;
										$slotID = $rowMonthly->slotID;
										$query = sprintf("INSERT INTO Users_has_Items(userID_FK, itemID_FK, equipped, slotID, swfID, maxLevel, equipDate, equipDuration) VALUES(%d, %d, %d, %d, %d, %d, '%s', %d)", $buyer_userID, $itemID, 0, $slotID, $swfID, 1, date("Y-m-d"), 0);
										$resultCheck = mysql_query($query, $database->connection);
										if(!$result){
											mail($notify_email, "DATABASE ERROR", "Insert ".MONTHLY_NAME." for user ".$buyer_userID."\n\n$res\n $req\n $strQuery\n $struery\n  $strQuery2");
											$sysmsg->send($buyer_userID, "System: Monthly Item Purchase Error4", "While purchasing ".MONTHLY_NAME.", we found an error in the system. The system error will be fixed and you will be notified.");
										}
									}
									break;
								default:
									die();
									break;
							}
							
						 } else {
						 	// Status isn't completed'
						 	switch($item_name){
								case CREDITS_50_NAME:
									$sysmsg->send($buyer_userID, "System: Credit Purchase Status", "Your purchase of <b>".CREDITS_50_NAME."</b> at the price of <b>$".CREDITS_50_PRICE."</b>, has not gone through yet. Paypal has notified that us the current status of the payment is in ".$payment_status.". After your payment clears, you will recieve your credits.");
									mail($notify_email, "PAYMENT STATUS", "UserID=".$buyer_userID." is trying to buy ".CREDITS_50_NAME.". The current status is ".$payment_status.".\n\n$res\n $req\n $strQuery\n $struery\n  $strQuery2");
									break;
								case CREDITS_100_NAME:
									$sysmsg->send($buyer_userID, "System: Credit Purchase Status", "Your purchase of <b>".CREDITS_100_NAME."</b> at the price of <b>$".MCREDITS_100_PRICE."</b>, has not gone through yet. Paypal has notified us that the current status of the payment is in ".$payment_status.". After your payment clears, you will recieve your credits.");
									mail($notify_email, "PAYMENT STATUS", "UserID=".$buyer_userID." is trying to buy ".CREDITS_100_NAME.". The current status is ".$payment_status.".\n\n$res\n $req\n $strQuery\n $struery\n  $strQuery2");
									break;
								case CREDITS_200_NAME:
									$sysmsg->send($buyer_userID, "System: Credit Purchase Status", "Your purchase of <b>".CREDITS_200_NAME."</b> at the price of <b>$".CREDITS_200_PRICE."</b>, has not gone through yet. Paypal has notified us that the current status of the payment is in ".$payment_status.". After your payment clears, you will recieve your credits.");
									mail($notify_email, "PAYMENT STATUS", "UserID=".$buyer_userID." is trying to buy ".CREDITS_200_NAME.". The current status is ".$payment_status.".\n\n$res\n $req\n $strQuery\n $struery\n  $strQuery2");
									break;
								case MONTHLY_NAME:
									$sysmsg->send($buyer_userID, "System: Monthly Item Purchase Status", "Your purchase of <b>".MONTHLY_NAME."</b> at the price of <b>$".MONTHLY_PRICE."</b>, has not gone through yet. Paypal has notified us that the current status of the payment is in ".$payment_status.". After your payment clears, you will recieve your credits.");
									mail($notify_email, "PAYMENT STATUS", "UserID=".$buyer_userID." is trying to buy ".MONTHLY_NAME.". The current status is ".$payment_status.".\n\n$res\n $req\n $strQuery\n $struery\n  $strQuery2");
									break;
								default:
									mail($notify_email, "PAYMENT STATUS ERROR", "UserID=".$buyer_userID." is trying to buy ".MONTHLY_NAME.". The current status is ".$payment_status.". Something has gone seriously wrong\n\n$res\n $req\n $strQuery\n $struery\n  $strQuery2");
									die();
									break;
							}
						 	
						 }
	    				
					}
	
				} else {
					
					mail($notify_email, "VERIFIED DUPLICATED TRANSACTION", "$res\n $req \n $strQuery\n $struery\n  $strQuery2");
				}
	
	    		//subscription handling branch
			    if ( $txn_type == "subscr_signup"  ||  $txn_type == "subscr_payment"  ) {
			
					// Not good
					
		            mail($notify_email, "SUBSCRIPTION WHAT", "$res\n $req \n $strQuery\n $struery\n  $strQuery2");
		
			    }
			}
	
			// if the IPN POST was 'INVALID'...do this
	
			else if (strcmp ($res, "INVALID") == 0) {
				// log for manual investigation
	
				mail($notify_email, "INVALID IPN", "$res\n $req");
			}
		}
		fclose ($fp);
		
	}
?>

